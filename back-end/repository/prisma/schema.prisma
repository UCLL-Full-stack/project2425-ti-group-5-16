generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  name     String
  role     String      
  age      Int
  setups   Setup[]
  comments Comment[]

  @@map("users")  // Explicit table naming
}

model Setup {
  id                 Int                      @id @default(autoincrement())
  owner              User                     @relation(fields: [ownerId], references: [id])
  ownerId            Int
  details            String
  lastUpdated        DateTime                 @updatedAt
  hardwareComponents HardwareComponentToSetup[]
  images             Image[]
  comments           Comment[]

  @@map("setups")
}

model HardwareComponent {
  id      Int       @id  @default(autoincrement())
  name    String    @unique
  details String
  price   Float
  setups  HardwareComponentToSetup[]

  @@map("hardware_components")
}


model Image {
  id      Int    @id @default(autoincrement())
  url     String    @unique
  details String
  setups  Setup[]

  @@map("images")
}

model Comment {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int      // Consistent naming convention
  setup    Setup    @relation(fields: [setupId], references: [id])
  setupId  Int      // Consistent naming convention
  content  String
  createdAt DateTime @default(now())  // Added timestamp

  @@map("comments")
}

model HardwareComponentToSetup {
  hardwareComponent   HardwareComponent @relation(fields: [hardwareComponentId], references: [id])
  hardwareComponentId Int
  setup              Setup             @relation(fields: [setupId], references: [id])
  setupId            Int

  @@id([hardwareComponentId, setupId])
  @@map("hardware_components_setups")
}